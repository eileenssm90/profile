import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { storage, database } from "../firebase.js";
import { collection, addDoc, getDocs } from "firebase/firestore";
import { ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
import Grid from "@mui/material/Grid";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

const CreatePost = ({
  name,
  setName,
  country,
  setCountry,
  photo,
  setPhoto,
  id,
  setId,
  background,
  setBackground,
  preoccupations,
  setPreoccupations,
  engagingHim,
  setEngagingHim,
}) => {
  const [file, setFile] = useState("");
  const [timestamp, setTimestamp] = useState("");
  const [imageURL, setImageURL] = useState("");
  const [data, setData] = useState({ name: "", country: "" });

  const metadata = {
    contentType: "image/jpeg",
  };

  let navigate = useNavigate();

  useEffect(() => {
    const uploadFile = () => {
      const time = new Date().getTime();
      const imageStorageRef = ref(storage, `/photo_${time}`);
      const uploadTask = uploadBytesResumable(imageStorageRef, file, metadata);
      uploadTask.on("state_changed", (snapshot) => {
        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {
          setImageURL(downloadURL);
          // setId(new Date().getTime());
          // console.log(id);
        });
      });
    };
    file && uploadFile();
  }, [file]);

  // const handleChange = (event) => {
  //   setData({
  //     ...data,
  //     name: name,
  //     country: country,
  //     // id: id,
  //     background: background,
  //     preoccupations: preoccupations,
  //     engagingHim: engagingHim,
  //     imageURL: imageURL,
  //   });
  //   console.log(data);
  // };

  const handleUpload = async () => {
    const postsCollectionRef = collection(database, "posts");
    await addDoc(postsCollectionRef, {
      name,
      country,
      // id,
      imageURL,
      background,
      preoccupations,
      engagingHim,
    });

    // This doc.id is the one autogenerated by
    const querySnapshot = await getDocs(collection(database, "posts"));
    const downloadedData = querySnapshot.forEach((doc) => {
      // console.log(doc.id, " => ", doc.data());
      console.log(doc.data());
    });

    // localStorage.setItem("data", JSON.stringify(data));

    const showToastMessage = () => {
      toast.success("Successfully uploaded!", {
        position: toast.POSITION.TOP_RIGHT,
      });
    };

    showToastMessage();
    navigate("/");
  };

  return (
    <>
      <Grid container display="flex" flexDirection="column" margin="100px">
        <Grid item margin="10px">
          <input
            type="text"
            name="name"
            placeholder="Name..."
            onChange={(event) => setName(event.target.value)}
            // onChange={handleChange}
            // defaultValue={name}
          ></input>
        </Grid>
        <Grid item margin="10px">
          <input
            type="text"
            name="country"
            placeholder="Country..."
            // defaultValue={country}
            // onChange={handleChange}
            onChange={(event) => setCountry(event.target.value)}
          ></input>
        </Grid>

        <Grid item margin="10px">
          <textarea
            type="text"
            name="background"
            // defaultValue={background}
            // onChange={handleChange}
            placeholder="Background ...."
            onChange={(event) => setBackground(event.target.value)}
          ></textarea>
        </Grid>
        <Grid item margin="10px">
          <textarea
            type="text"
            name="preoccupations"
            // defaultValue={preoccupations}
            // onChange={handleChange}
            placeholder="Preoccupations ...."
            onChange={(event) => setPreoccupations(event.target.value)}
          ></textarea>
        </Grid>
        <Grid item margin="10px">
          <textarea
            type="text"
            name="preoccupations"
            // defaultValue={preoccupations}
            // onChange={handleChange}
            placeholder="Engaging him..."
            onChange={(event) => setEngagingHim(event.target.value)}
          ></textarea>
        </Grid>
        <Grid item margin="10px">
          <input
            type="file"
            onChange={(event) => setFile(event.target.files[0])}
          ></input>
        </Grid>
        <Grid item margin="10px">
          <button onClick={handleUpload}>Upload</button>
        </Grid>
      </Grid>
    </>
  );
};

export default CreatePost;
